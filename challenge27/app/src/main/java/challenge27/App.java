/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge27;

public class App {

    public static void main(String[] args) {
        int [] arr  = {1, 4, 5, 2, 3};
        int [] arr2 = MargeSort (arr, 0, arr.length - 1);

        // Print Array that produced from MargeSort function
        for (int i = 0; i < arr2.length; i++){
            System.out.println(arr2[i]);
        }

    }


    public static int[] MargeSort(int arr[], int lowerBound, int upperBound) {

        if (lowerBound < upperBound)
        {

            int mid = (lowerBound + upperBound) / 2;

            MargeSort (arr, lowerBound, mid);
            MargeSort (arr , mid + 1, upperBound);

            merge(arr, lowerBound, mid, upperBound);
        }
        return arr;
    }

    public static void merge(int arr[], int lowerBound, int mid, int upperBound) {

        int lengthArrayOne = mid - lowerBound + 1;
        int lengthArrayTwo = upperBound - mid;

        int left[] = new int[lengthArrayOne];
        int right[] = new int[lengthArrayTwo];

        for (int i = 0; i < lengthArrayOne; ++i)
            left[i] = arr[lowerBound + i];
        for (int j = 0; j < lengthArrayTwo; ++j){
            right[j] = arr[mid + 1 + j];
    }

        int indexOfArrayOne = 0, indexOfArrayTwo = 0;

        int indexOfMarge = lowerBound;
        while (indexOfArrayOne < lengthArrayOne && indexOfArrayTwo < lengthArrayTwo)
        {
            if (left[indexOfArrayOne] <= right[indexOfArrayTwo])
            {
                arr[indexOfMarge] = left[indexOfArrayOne];
                indexOfArrayOne++;
            }
            else
            {
                arr[indexOfMarge] = right[indexOfArrayTwo];
                indexOfArrayTwo++;
            }
            indexOfMarge++;
        }

        while (indexOfArrayOne < lengthArrayOne)
        {
            arr[indexOfMarge] = left[indexOfArrayOne];
            indexOfArrayOne++;
            indexOfMarge++;
        }

        while (indexOfArrayTwo < lengthArrayTwo)
        {
            arr[indexOfMarge] = right[indexOfArrayTwo];
            indexOfArrayTwo++;
            indexOfMarge++;
        }
    }

}
