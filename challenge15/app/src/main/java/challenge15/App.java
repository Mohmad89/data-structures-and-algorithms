/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge15;

import challenge15.data.BTNode;
import challenge15.structure.BinarySearchTree;
import challenge15.structure.BinaryTree;

public class App {

    public static void main(String[] args) {
        BinaryTree binaryTree = new BinaryTree();
        binaryTree.setRoot(new BTNode<>("A"));
        binaryTree.getRoot().setLeft(new BTNode<>("B"));
        binaryTree.getRoot().setRight(new BTNode<>("C"));
        binaryTree.getRoot().getLeft().setLeft(new BTNode<>("D"));
        binaryTree.getRoot().getLeft().setRight(new BTNode<>("E"));
        binaryTree.getRoot().getRight().setLeft(new BTNode<>("F"));
        binaryTree.getRoot().getRight().setRight(new BTNode<>("G"));
        System.out.println("<-----------------------------  level Order ---------------------------------->");
        binaryTree.levelOrderTraversalLoop();
        System.out.println();
        System.out.println("<------------------------------ Pre Order ------------------------------------>");
        System.out.println( binaryTree.preOrder());
        System.out.println();
        System.out.println("<------------------------------ In Order ------------------------------------->");
        System.out.println(binaryTree.inOrder());
        System.out.println();
        System.out.println("<------------------------------ Post Order------------------------------------>");
        System.out.println(binaryTree.postOrder());


        BinarySearchTree binarySearchTree = new BinarySearchTree<>();
        binarySearchTree.add("A");
        binarySearchTree.add("B");
        binarySearchTree.add("C");
        binarySearchTree.add("D");
        System.out.println(binarySearchTree.contain("S"));


    }
}
