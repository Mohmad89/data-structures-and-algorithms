/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge17;

import challenge17.data.BTNode;
import challenge17.structure.BinaryTree;

import java.util.ArrayList;
import java.util.Stack;

public class App <T>{

    public static void main(String[] args) {
        BinaryTree binaryTree = new BinaryTree();

        binaryTree.setRoot(new BTNode(1));
        binaryTree.getRoot().setLeft(new BTNode<Integer>(3));
        binaryTree.getRoot().setRight(new BTNode<Integer>(12));
        binaryTree.getRoot().getLeft().setLeft(new BTNode<Integer>(6));
        binaryTree.getRoot().getLeft().setRight(new BTNode<Integer>(7));
        binaryTree.getRoot().getLeft().getLeft().setLeft(new BTNode<Integer>(9));

        ArrayList<String> arrayList = breadthFirst(binaryTree);
        System.out.println(arrayList);
    }

    public static ArrayList<String> breadthFirst (BinaryTree binaryTree) {
        ArrayList <String> arrayList = new ArrayList();
        if (binaryTree.getRoot() == null){
            return arrayList;
        }
        Stack<BTNode> stack = new Stack<>();
        stack.push(binaryTree.getRoot());


        while (!stack.isEmpty()){
            BTNode value = stack.pop();
            arrayList.add(value.getData().toString());
            if (value.getRight() != null){
                stack.push(value.getRight());
            }
            if (value.getLeft() != null){
                stack.push(value.getLeft());
            }
        }
        return arrayList;
    }

}
