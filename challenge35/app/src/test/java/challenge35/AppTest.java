/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge35;

import challenge35.data.Vertex;
import challenge35.structure.Graph;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void addNodeTest() throws Exception {
            Graph graph = new Graph();
            graph.addNode("A");
            assertEquals(1, graph.size());
    }

    @Test
    void addEdgeTest() throws Exception {
        Graph graph = new Graph();
        graph.addNode("A");
        graph.addNode("B");
        graph.addEdge(new Vertex("A"), new Vertex("B"));
        assertEquals(new Vertex("B"), graph.getNeighbors(new Vertex("A")).get(0));
    }

    @Test
    void collectionOfNodeTest() throws Exception {
        Graph graph = new Graph();
        graph.addNode("A");
        graph.addNode("B");
        graph.addNode("C");
        graph.addNode("D");
        assertEquals(4, graph.getNode().size());
    }

    @Test
    void neighborsGraph() {
        Graph graph = new Graph();
        graph.addNode("A");
        graph.addNode("B");
        graph.addNode("C");
        graph.addEdge(new Vertex("A"), new Vertex("B"));
        graph.addEdge(new Vertex("A"), new Vertex("C"));
        assertEquals(new Vertex("B"), graph.getNeighbors(new Vertex("A")).get(0));
        assertEquals(new Vertex("C"), graph.getNeighbors(new Vertex("A")).get(1));
    }

    @Test
    void graphSize (){
        Graph graph = new Graph();
        graph.addNode("A");
        graph.addNode("B");
        graph.addNode("C");
        assertEquals(3, graph.size());
    }

    @Test
    void oneNode () {
        Graph graph = new Graph();
        graph.addNode("A");
        graph.addEdge(new Vertex("A"), new Vertex("A"));
        assertEquals(new Vertex("A"), graph.getNeighbors(new Vertex("A")).get(0));
    }

    @Test
    void emptyGraph() {
        Graph graph = new Graph();
        assertEquals(null, graph.getNode());
    }
}
