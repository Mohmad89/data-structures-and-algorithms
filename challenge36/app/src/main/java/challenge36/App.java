/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge36;

import challenge36.data.Vertex;
import challenge36.structure.Graph;

import java.util.stream.Collectors;

public class App {

    public static void main(String[] args) {
        // Graph Instance
        Graph graph = new Graph();
        System.out.println(graph.addNode("A"));
        System.out.println(graph.addNode("B"));
        System.out.println(graph.addNode("C"));
        System.out.println(graph.addNode("D"));
        System.out.println(graph.addNode("F"));
        System.out.println(graph.getNode());
        graph.addEdge(new Vertex("A"), new Vertex("B"));
        graph.addEdge(new Vertex("A"), new Vertex("C"));
        graph.addEdge(new Vertex("B"), new Vertex("D"));
        graph.addEdge(new Vertex("D"), new Vertex("F"));
//        System.out.println(graph.getNeighbors(new Vertex("A")));
//        System.out.println(graph.size());

        System.out.println(graph.breadthFirst(new Vertex("A")));
        System.out.println(graph.depthFirst(new Vertex("B")));
        System.out.println("--------------------------");

        Vertex[] nodes = {
                new Vertex("a"),
                new Vertex("b"),
                new Vertex("c"),
                new Vertex("d"),
                new Vertex("e")};

        Graph graphTwo = new Graph();
        graphTwo.addNode("a");
        graphTwo.addNode("b");
        graphTwo.addNode("c");
        graphTwo.addNode("d");
        graphTwo.addNode("e");

        int[][] arr={
                {0, 1, 0, 0, 1},
                {1, 0, 1, 1, 0},
                {0, 1, 0, 1, 0},
                {0, 1, 1, 0, 1},
                {1, 0, 0, 1, 0}};

        graphTwo.adjacencyMatrixRepresentation(arr, nodes, graphTwo);
    }
}
